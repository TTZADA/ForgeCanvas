"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CanvasUtil=exports.Colors=exports.hexRegex=exports.rgbaRegex=exports.fontRegex=void 0,exports.loadFrame=loadFrame,exports.parseArgs=parseArgs;const canvas_1=require("@napi-rs/canvas"),gifsx_1=require("@gifsx/gifsx"),__1=require("..");exports.fontRegex=/^\s*(?=(?:(?:[-a-z]+\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\1|\2|\3)\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\d]+(?:\%|in|[cem]m|ex|p[ctx]))(?:\s*\/\s*(normal|[.\d]+(?:\%|in|[cem]m|ex|p[ctx])))?\s*([-,\'\sa-z]+?)\s*$/i,exports.rgbaRegex=/^rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})(\s*,\s*(0|1|0?\.\d+))?\s*\)$/,exports.hexRegex=/^#?([0-9A-Fa-f]{3,4}){1,2}$/,exports.Colors={White:"#ffffff",Aqua:"#1abc9c",Green:"#57f287",Blue:"#3498db",Yellow:"#fee75c",Purple:"#9b59b6",LuminousVividPink:"#e91e63",Fuchsia:"#eb459e",Gold:"#f1c40f",Orange:"#e67e22",Red:"#ed4245",RubberDuck:"#FFD700",Grey:"#95a5a6",Navy:"#34495e",DarkAqua:"#11806a",DarkGreen:"#1f8b4c",DarkBlue:"#206694",DarkPurple:"#71368a",DarkVividPink:"#ad1457",DarkGold:"#c27c0e",DarkOrange:"#a84300",DarkRed:"#992d22",DarkGrey:"#979c9f",DarkerGrey:"#7f8c8d",LightGrey:"#bcc0c0",DarkNavy:"#2c3e50",Blurple:"#5865f2",Greyple:"#99aab5",DarkButNotBlack:"#2c2f33",NotQuiteBlack:"#23272a"},exports.CanvasUtil={isValidFont:s=>{if(!s)return!1;if(exports.fontRegex.test(s)){const a=exports.fontRegex.exec(s);if(a?.[0]){const e=a[6].split(",").map(r=>r?.trim());if(e){for(const r of e)if(!canvas_1.GlobalFonts.has(r.replace(/['',]/g,"")))return!1}return!0}return!1}return!1},parseStyle:async(s,a,e,r)=>{if(!r)return"#000000";let n=r.split("://");if(n[0]==="gradient"){const t=a.gradientManager?.get(n.slice(1).join("://"));if(!t)return s.customError("No gradient");n=t}else if(n[0]==="pattern"){const t=n.slice(1).join("://").split(":"),o=t.shift()?.toLowerCase(),l=t.length>0&&["repeat","repeat-x","repeat-y","no-repeat"].includes(t[t.length-1])?t.pop():null;let c;if(o==="canvas"){const i=a.canvasManager?.get(l?t.join(":"):t.join())?.ctx;if(!i)return s.customError("No canvas with provided name found.");c=i.getImageData(0,0,i.canvas.width,i.canvas.height)}else if(o==="image")if(t?.join(":")?.startsWith("images://")){const i=a?.imageManager?.get(t.join(":").slice(9));if(!i)return s.customError("No image with provided name found.");c=i}else c=await(0,canvas_1.loadImage)(l?t.join(":"):t.join());else return s.customError("Invalid pattern type.");n=e.ctx.createPattern(c,l)}else n=(exports.hexRegex.test(r)?r:exports.rgbaRegex.test(r)?(()=>{const t=r.match(exports.rgbaRegex);return(0,gifsx_1.rgbaToHex)(Uint8Array.from([Number.parseInt(t[1],10),Number.parseInt(t[2],10),Number.parseInt(t[3],10),t[5]?Number.parseFloat(t[5]):255]),!1,!0)})():exports.Colors[r])??"#000000";return n},calculateRectAlignOrBaseline:(s,a,e)=>(e=typeof e=="string"?__1.RectAlign[e]:e,e===__1.RectAlign.center?s-a/2:e===__1.RectAlign.right||e===__1.RectBaseline.top?s-a:s),parseFilters:s=>{const a=[],e=/([a-zA-Z-]+)\(([^)]+)\)/g;let r;for(;(r=e.exec(s))!==null;){const[n,t,o]=r;a.push({filter:t,value:o,raw:n})}return a}};async function loadFrame(s,a){const e=await(0,canvas_1.loadImage)(s),r=(0,canvas_1.createCanvas)(e.width,e.height),n=r.getContext("2d");return n.drawImage(e,0,0),gifsx_1.Frame.fromRgba(r.width,r.height,Uint8Array.from(n.getImageData(0,0,r.width,r.height).data),a)}function parseArgs(s,a,e,r){const n=s.slice(typeof a=="string"?a.length:a).split(":");if(r?n.length<e:n.length!==e)throw new Error(`${a} expects ${e} arguments.`);return n}
