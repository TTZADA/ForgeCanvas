"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CanvasUtil=exports.Colors=exports.hexRegex=exports.rgbaRegex=exports.fontRegex=void 0,exports.loadFrame=loadFrame,exports.parseArgs=parseArgs;const canvas_1=require("@napi-rs/canvas"),gifsx_1=require("@gifsx/gifsx"),__1=require("..");exports.fontRegex=/^\s*(?=(?:(?:[-a-z]+\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\1|\2|\3)\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\d]+(?:\%|in|[cem]m|ex|p[ctx]))(?:\s*\/\s*(normal|[.\d]+(?:\%|in|[cem]m|ex|p[ctx])))?\s*([-,\'\sa-z]+?)\s*$/i,exports.rgbaRegex=/^rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})(\s*,\s*(0|1|0?\.\d+))?\s*\)$/,exports.hexRegex=/^#?([0-9A-Fa-f]{3,4}){1,2}$/,exports.Colors={White:"#ffffff",Aqua:"#1abc9c",Green:"#57f287",Blue:"#3498db",Yellow:"#fee75c",Purple:"#9b59b6",LuminousVividPink:"#e91e63",Fuchsia:"#eb459e",Gold:"#f1c40f",Orange:"#e67e22",Red:"#ed4245",RubberDuck:"#FFD700",Grey:"#95a5a6",Navy:"#34495e",DarkAqua:"#11806a",DarkGreen:"#1f8b4c",DarkBlue:"#206694",DarkPurple:"#71368a",DarkVividPink:"#ad1457",DarkGold:"#c27c0e",DarkOrange:"#a84300",DarkRed:"#992d22",DarkGrey:"#979c9f",DarkerGrey:"#7f8c8d",LightGrey:"#bcc0c0",DarkNavy:"#2c3e50",Blurple:"#5865f2",Greyple:"#99aab5",DarkButNotBlack:"#2c2f33",NotQuiteBlack:"#23272a"},exports.CanvasUtil={isValidFont:s=>{if(!s||!exports.fontRegex.test(s))return!1;const a=exports.fontRegex.exec(s);if(!a?.[0])return!1;const t=a[6].split(",").map(e=>e?.trim());for(const e of t)if(!canvas_1.GlobalFonts.has(e.replace(/['',]/g,"")))return!1;return!0},parseStyle:async(s,a,t,e)=>{if(!e)return"#000000";let n=e.split("://");if(n[0]==="gradient"){const r=a.gradientManager?.get(n.slice(1).join("://"));if(!r)return s.customError("No gradient");n=r}else if(n[0]==="pattern"){const r=n.slice(1).join("://").split(":"),c=r.shift()?.toLowerCase(),l=r.length>0&&["repeat","repeat-x","repeat-y","no-repeat"].includes(r[r.length-1])?r.pop():null;let o;if(c==="canvas"){const i=a.canvasManager?.get(l?r.join(":"):r.join())?.ctx;if(!i)return s.customError("No canvas with provided name found.");o=i.getImageData(0,0,i.canvas.width,i.canvas.height)}else if(r?.join(":")?.startsWith("images://")){const i=a?.imageManager?.get(r.join(":").slice(9));if(!i)return s.customError("No image with provided name found.");o=i}else o=await(0,canvas_1.loadImage)(l?r.join(":"):r.join());n=t.ctx.createPattern(o,l)}else n=(exports.hexRegex.test(e)?e:exports.rgbaRegex.test(e)?(()=>{const r=e.match(exports.rgbaRegex);return(0,gifsx_1.rgbaToHex)(Uint8Array.from([Number.parseInt(r[1],10),Number.parseInt(r[2],10),Number.parseInt(r[3],10),r[5]?Number.parseFloat(r[5]):255]),!1,!0)})():exports.Colors[e])??"#000000";return n},calculateRectAlignOrBaseline:(s,a,t)=>(t=typeof t=="string"?__1.RectAlign[t]:t,t===__1.RectAlign.center?s-a/2:t===__1.RectAlign.right||t===__1.RectBaseline.top?s-a:s),parseFilters:s=>{const a=[],t=/([a-zA-Z-]+)\(([^)]+)\)/g;let e;for(;(e=t.exec(s))!==null;){const[n,r,c]=e;a.push({filter:r,value:c,raw:n})}return a}};async function loadFrame(s,a){const t=await(0,canvas_1.loadImage)(s),e=(0,canvas_1.createCanvas)(t.width,t.height),n=e.getContext("2d");return n.drawImage(t,0,0),gifsx_1.Frame.fromRgba(e.width,e.height,Uint8Array.from(n.getImageData(0,0,e.width,e.height).data),a)}function parseArgs(s,a,t,e){const n=s.slice(typeof a=="string"?a.length:a).split(":");if(e?n.length<t:n.length!==t)throw new Error(`${a} expects ${t} arguments.`);return n}
