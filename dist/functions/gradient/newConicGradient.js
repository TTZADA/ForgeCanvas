"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const forgescript_1=require("@tryforge/forgescript"),__1=require("../..");exports.default=new forgescript_1.NativeFunction({name:"$newConicGradient",aliases:["$createConicGradient","$conicGradient"],description:"Creates a conic gradient.",version:"1.0.0",brackets:!0,unwrap:!0,args:[{name:"name",description:"Name of the new gradient.",type:forgescript_1.ArgType.String,required:!0,rest:!1},{name:"start",description:"The angle at which to begin the gradient, in radians. The angle starts from a line going horizontally right from the center, and proceeds clockwise.",type:forgescript_1.ArgType.Number,required:!0,rest:!1},{name:"x",description:"The X coordinate of the center of the gradient.",type:forgescript_1.ArgType.Number,required:!0,rest:!1},{name:"y",description:"The Y coordinate of the center of the gradient.",type:forgescript_1.ArgType.Number,required:!0,rest:!1},{name:"stops",description:"Color stops.",type:forgescript_1.ArgType.Number,required:!1,rest:!0}],async execute(e,[r,t,a,n]){return(!e.gradientManager||!(e.gradientManager instanceof __1.GradientManager))&&(e.gradientManager=new __1.GradientManager),e.gradientManager.set(r,__1.GradientType.conic,t,a,n),e.gradientManager.stops.forEach(i=>e.gradientManager?.get(r)?.addColorStop(...i)),this.success()}});
