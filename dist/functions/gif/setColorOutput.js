"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const forgescript_1=require("@tryforge/forgescript"),__1=require("../.."),gifsx_1=require("@gifsx/gifsx");exports.default=new forgescript_1.NativeFunction({name:"$setColorOutput",aliases:["$setOutputColor"],description:"Configure the color output for the GIF Decoder.",version:"1.2.0",brackets:!0,unwrap:!0,args:[{name:"name",description:"Name of the Decode Options.",type:forgescript_1.ArgType.String,required:!1,rest:!1},{name:"output",description:"The color output type.",type:forgescript_1.ArgType.Enum,enum:__1.ColorOutput,required:!0,rest:!1}],async execute(e,[r,o]){(!e.gifManager||!(e.gifManager instanceof __1.GIFManager))&&(e.gifManager=new __1.GIFManager),!r&&!e.gifManager.currentOptions&&(e.gifManager.currentOptions=new gifsx_1.DecodeOptions);let t=r?e.gifManager.getDecodeOptions(r):e.gifManager.currentOptions;return t?(t.setColorOutput(o),this.success()):this.customError("No decode options")}});
