"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const forgescript_1=require("@tryforge/forgescript"),__1=require("../..");exports.default=new forgescript_1.NativeFunction({name:"$fill",aliases:["$pathFill","$fillPath"],description:"Fills the current path.",version:"1.0.0",brackets:!0,unwrap:!0,args:[{name:"canvas",description:"Name of the canvas.",type:forgescript_1.ArgType.String,required:!1,rest:!1},{name:"style",description:"The style. (color/gradient/pattern)",type:forgescript_1.ArgType.String,required:!0,rest:!1},{name:"fillRule",description:"The fill rule",type:forgescript_1.ArgType.Enum,enum:__1.FillRule,required:!1,rest:!1}],async execute(r,[t,l,n]){const e=t?r.canvasManager?.get(t):!t&&r.canvasManager?.current?.length!==0?r.canvasManager?.current?.[r.canvasManager?.current?.length-1]:null;if(!e)return this.customError("No canvas");const a=e.ctx.fillStyle;return e.ctx.fillStyle=await __1.CanvasUtil.parseStyle(this,r,e,l),e.ctx.fill(typeof n=="number"?__1.FillRule[n]:n),e.ctx.fillStyle=a,this.success()}});
