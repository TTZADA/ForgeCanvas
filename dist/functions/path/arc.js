"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const forgescript_1=require("@tryforge/forgescript");exports.default=new forgescript_1.NativeFunction({name:"$arc",description:"Draws a circular arc in the current path.",version:"1.0.0",brackets:!0,unwrap:!0,args:[{name:"canvas",description:"Name of the canvas.",type:forgescript_1.ArgType.String,required:!1,rest:!1},{name:"x",description:"The X coordinate of the arc's center.",type:forgescript_1.ArgType.Number,required:!0,rest:!1},{name:"y",description:"The Y coordinate of the arc's center.",type:forgescript_1.ArgType.Number,required:!0,rest:!1},{name:"radius",description:"The arc's radius. Must be positive.",type:forgescript_1.ArgType.Number,required:!0,rest:!1},{name:"startAngle",description:"The angle at which the arc starts in radians.",type:forgescript_1.ArgType.Number,required:!0,rest:!1},{name:"endAngle",description:"The angle at which the arc ends in radians.",type:forgescript_1.ArgType.Number,required:!0,rest:!1},{name:"counterclockwise",description:"An optional boolean value. If true, draws the arc counter-clockwise between the start and end angles.",type:forgescript_1.ArgType.Boolean,required:!1,rest:!1}],async execute(e,[r,a,s,n,c,i,u]){const t=r?e.canvasManager?.get(r):!r&&e.canvasManager?.current?.length!==0?e.canvasManager?.current?.[e.canvasManager?.current?.length-1]:null;return t?(t.ctx.arc(a,s,n,c,i,u??!1),this.success()):this.customError("No canvas")}});
