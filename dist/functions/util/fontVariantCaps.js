"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const forgescript_1=require("@tryforge/forgescript"),__1=require("../..");exports.default=new forgescript_1.NativeFunction({name:"$fontVariantCaps",aliases:["$fontCaps"],description:"Sets or returns the capitalization of the text.",version:"1.1.0",brackets:!1,unwrap:!0,args:[{name:"canvas",description:"Name of the canvas.",type:forgescript_1.ArgType.String,required:!1,rest:!1},{name:"type",description:"The new alternative capitalization.",type:forgescript_1.ArgType.Enum,enum:__1.FontVariantCaps,required:!1,rest:!1}],async execute(t,[r,e]){const a=(r?t.canvasManager?.get(r):t.canvasManager?.lastCurrent)?.ctx;return a?this.success(e!==null?(a.fontVariantCaps=typeof e=="number"?__1.FontVariantCaps[e]:e,void 0):a.fontVariantCaps):this.customError("No canvas")}});
