"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const forgescript_1=require("@tryforge/forgescript"),gifsx_1=require("@gifsx/gifsx");exports.default=new forgescript_1.NativeFunction({name:"$indexedToRgba",description:"Converts indexed pixels to RGBA",version:"1.2.1",brackets:!0,unwrap:!0,args:[{name:"palette",description:"The palette to use for the conversion.",type:forgescript_1.ArgType.Json,required:!0,rest:!1},{name:"transparent",description:"The index of the transparent color in the palette.",type:forgescript_1.ArgType.Number,required:!1,rest:!1},{name:"pixels",description:"The pixels to convert into RGBA.",type:forgescript_1.ArgType.Number,check:e=>e>=0&&e<=255,required:!0,rest:!0}],async execute(e,[t,s,i]){try{const r=(0,gifsx_1.indexedToRgba)(Uint8Array.from(i),Uint8Array.from(t),s);return this.success(`[${r.join(", ")}]`)}catch(r){return this.customError(r.toString())}}});
