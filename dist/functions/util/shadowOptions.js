"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const forgescript_1=require("@tryforge/forgescript");exports.default=new forgescript_1.NativeFunction({name:"$shadowOptions",aliases:["$shadowConfig"],description:"Sets or returns the shadow options in a canvas.",version:"1.1.0",brackets:!0,unwrap:!0,args:[{name:"canvas",description:"Name of the canvas.",type:forgescript_1.ArgType.String,required:!1,rest:!1},{name:"options",description:"The options.",type:forgescript_1.ArgType.Json,required:!0,rest:!1}],async execute(r,[a,e]){const t=(a?r.canvasManager?.get(a):!a&&r.canvasManager?.current?.length!==0?r.canvasManager?.current?.[r.canvasManager?.current?.length-1]:null)?.ctx;if(!t)return this.customError("No canvas");typeof e=="string"&&(e=JSON.parse(e));const n={color:"shadowColor",blur:"shadowBlur",offsetX:"shadowOffsetX",offsetY:"shadowOffsetY"},o=[];return Array.isArray(e)?e.forEach(s=>o.push(t[n[s]])):Object.keys(e).forEach(s=>t[n?.[s]]=e[s]),this.success(Array.isArray(e)?JSON.stringify(o):void 0)}});
