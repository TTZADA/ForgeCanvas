"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const forgescript_1=require("@tryforge/forgescript"),__1=require("../..");exports.default=new forgescript_1.NativeFunction({name:"$filter",description:"Use filters in your canvas.",version:"1.0.0",brackets:!0,unwrap:!0,args:[{name:"canvas",description:"Name of the canvas.",type:forgescript_1.ArgType.String,required:!1,rest:!1},{name:"method",description:"The method.",type:forgescript_1.ArgType.Enum,enum:__1.FilterMethod,required:!0,rest:!1},{name:"filter",description:"Name of the filter.",type:forgescript_1.ArgType.Enum,enum:__1.Filters,required:!1,rest:!1},{name:"value",description:"Filter's value.",type:forgescript_1.ArgType.String,required:!1,rest:!1}],async execute(e,[r,n,a,i]){const s=r?e.canvasManager?.get(r):!r&&e.canvasManager?.current?.length!==0?e.canvasManager?.current?.[e.canvasManager?.current?.length-1]:null;if(!s)return this.customError("No canvas");const t=s.filter(n,a,i);return this.success(typeof t=="object"?JSON.stringify(t):t)}});
