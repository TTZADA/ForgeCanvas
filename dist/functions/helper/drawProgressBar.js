"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const forgescript_1=require("@tryforge/forgescript"),__1=require("../..");exports.default=new forgescript_1.NativeFunction({name:"$drawProgressBar",description:"Creates and draws progress bars on a canvas.",version:"1.2.0",brackets:!0,unwrap:!0,args:[{name:"canvas",description:"Name of the canvas.",type:forgescript_1.ArgType.String,required:!1,rest:!1},{name:"x",description:"The X coordinate.",type:forgescript_1.ArgType.Number,required:!0,rest:!1},{name:"y",description:"The Y coordinate.",type:forgescript_1.ArgType.Number,required:!0,rest:!1},{name:"width",description:"The width.",type:forgescript_1.ArgType.Number,required:!0,rest:!1},{name:"height",description:"The height.",type:forgescript_1.ArgType.Number,required:!0,rest:!1},{name:"config",description:"The progress bar configuration.",type:forgescript_1.ArgType.Json,required:!0,rest:!1}],async execute(r,[n,i,d,o,u]){const a=n?r.canvasManager?.get(n):!n&&r.canvasManager?.current?.length!==0?r.canvasManager?.current?.[r.canvasManager?.current?.length-1]:null;if(!a)return this.customError("No canvas");const p=r.getEnvironmentKey("progressBarData")??[],e=r.getEnvironmentKey("progressBarOptions")??{},c=e.type??"normal";let t;if(c==="normal"){const s=p[0];t=a.drawProgressBar(i,d,o,u,s.value,{style:await __1.CanvasUtil.parseStyle(this,r,a,s.style)??"#000000",background:{enabled:Object.keys(e).find(g=>g.startsWith("background"))!==void 0,style:await __1.CanvasUtil.parseStyle(this,r,a,e["background-style"])??"#000000",radius:e["background-radius"],padding:e["background-padding"],type:e["background-type"]},type:e["draw-type"],radius:e.radius,direction:e.direction,clip:e["clip-radius"],left:e.left})}else t=a.drawPieChart(i,d,o,u,p,{type:e["draw-type"]==="clear"?"fill":e["draw-type"],background:{enabled:Object.keys(e).find(s=>s.startsWith("background"))!==void 0,style:await __1.CanvasUtil.parseStyle(this,r,a,e["background-style"])??"#000000",radius:e["background-radius"],padding:e["background-padding"],type:e["background-type"]},radius:Array.isArray(e.radius)?e.radius[0]:e.radius??0,left:e.left});return r.deleteEnvironmentKey("progressBarData"),this.success(t?JSON.stringify(t):void 0)}});
