"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const forgescript_1=require("@tryforge/forgescript"),__1=require("../..");exports.default=new forgescript_1.NativeFunction({name:"$canvasBuffer",description:"Returns buffer of a canvas.",version:"1.2.0",brackets:!1,unwrap:!0,args:[{name:"canvas",description:"Name of the canvas.",type:forgescript_1.ArgType.String,required:!1,rest:!1},{name:"format",description:"The image format.",type:forgescript_1.ArgType.Enum,enum:__1.ImageFormat,required:!1,rest:!1}],async execute(r,[a,e]){const t=a?r.canvasManager?.get(a):r.canvasManager?.lastCurrent;return t?this.success(`[${Array.from(t.buffer(e!==null?"image/"+(typeof e=="number"?__1.ImageFormat[e]:e):"image/png")).join(", ")}]`):this.customError("No canvas")}});
