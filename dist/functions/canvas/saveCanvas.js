"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const forgescript_1=require("@tryforge/forgescript"),__1=require("../.."),node_fs_1=require("node:fs"),canvas_1=require("@napi-rs/canvas");exports.default=new forgescript_1.NativeFunction({name:"$saveCanvas",aliases:["$downloadCanvas","$canvasSave","$canvasDownload"],description:"Saves a canvas to a file.",version:"1.1.0",brackets:!0,unwrap:!0,args:[{name:"canvas",description:"Name of the canvas.",type:forgescript_1.ArgType.String,required:!1,rest:!1},{name:"path",description:"Path to a directory. (including the canvas file name and extension)",type:forgescript_1.ArgType.String,required:!0,rest:!1},{name:"format",description:"The image format.",type:forgescript_1.ArgType.Enum,enum:__1.ImageFormat,required:!1,rest:!1}],async execute(e,[n,a,r]){const s=(n?e.canvasManager?.get(n):!n&&e.canvasManager?.current?.length!==0?e.canvasManager?.current?.[e.canvasManager?.current?.length-1]:null)?.ctx?.canvas,t=r!==null?"image/"+(typeof r=="number"?__1.ImageFormat[r]:r):"image/png";return s?a?(a.startsWith("images://")?(e.imageManager||(e.imageManager=new __1.ImageManager),e.imageManager.set(a.slice(9),await(0,canvas_1.loadImage)(s.toBuffer(t)))):(0,node_fs_1.writeFileSync)(a,s.toBuffer(t)),this.success()):this.customError("No path provided"):this.customError("No canvas")}});
