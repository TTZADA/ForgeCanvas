"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const forgescript_1=require("@tryforge/forgescript"),canvas_1=require("@napi-rs/canvas"),node_fs_1=require("node:fs"),__1=require("../..");exports.default=new forgescript_1.NativeFunction({name:"$saveCanvas",aliases:["$downloadCanvas","$canvasSave","$canvasDownload"],description:"Saves a canvas to a file.",version:"1.1.0",brackets:!0,unwrap:!0,args:[{name:"canvas",description:"Name of the canvas.",type:forgescript_1.ArgType.String,required:!1,rest:!1},{name:"path",description:"Path to a directory. (including the canvas file name and extension)",type:forgescript_1.ArgType.String,required:!0,rest:!1},{name:"format",description:"The image format.",type:forgescript_1.ArgType.Enum,enum:__1.ImageFormat,required:!1,rest:!1}],async execute(e,[n,a,r]){const s=n?e.canvasManager?.get(n):e.canvasManager?.lastCurrent;if(!s)return this.customError("No canvas");const t=r!==null?"image/"+(typeof r=="number"?__1.ImageFormat[r]:r):"image/png";return a?(a.startsWith("images://")?(e.imageManager||(e.imageManager=new __1.ImageManager),e.imageManager.set(a.slice(9),await(0,canvas_1.loadImage)(s.buffer(t)))):(0,node_fs_1.writeFileSync)(a,s.buffer(t)),this.success()):this.customError("No path provided")}});
